#!/bin/sh


# . startup .
riverctl spawn "sh $XDG_CONFIG_HOME/river/scripts/autostart.sh"


# . colors .
#  definition
#   catppuccin macchiato
color_rosewater=0xf4dbd6
color_flamingo=0xf0c6c6
color_pink=0xf5bde6
color_mauve=0xc6a0f6
color_red=0xed8796
color_maroon=0xee99a0
color_peach=0xf5a97f
color_yellow=0xeed49f
color_green=0xa6da95
color_teal=0x8bd5ca
color_sky=0x91d7e3
color_sapphire=0x7dc4e4
color_blue=0x8aadf4
color_lavender=0xb7bdf8

color_text=0xcad3f5
color_subtext1=0xb8c0e0
color_subtext0=0xa5adcb
color_overlay2=0x939ab7
color_overlay1=0x8087a2
color_overlay0=0x6e738d
color_surface2=0x5b6078
color_surface1=0x494d64
color_surface0=0x363a4f
color_base=0x24273a
color_mantle=0x1e2030
color_crust=0x181926
#  usage
#riverctl background-color $color_base
riverctl border-color-focused $color_peach
riverctl border-color-unfocused $color_overlay0
riverctl border-width 2


# . background .
riverctl spawn "swaybg -m fill -i $XDG_CONFIG_HOME/wallpaper.png"


# . directions .
#  vim-like keys
key_left="Left"   # H
key_down="Down"   # J
key_up="Up"       # K
key_right="Right" # L


# . programs .
#  terminal
term="foot"
#  launcher/menu
menu="wofi --show drun --allow-images | xargs swaymsg exec --"
menu_cmd="wofi --show run | xargs swaymsg exec --"
menu_emoji="wofi-emoji"
#  web browser
web_browser="firefox"
#  file manager
file_manager="pcmanfm"
#  screenshots
screenshot_full="sh $XDG_CONFIG_HOME/river/scripts/screenshot.sh full"
screenshot_copy_full="sh $XDG_CONFIG_HOME/river/scripts/screenshot.sh full-copy"
screenshot_copy_sel="sh $XDG_CONFIG_HOME/river/scripts/screenshot.sh sel-copy"
#  volume control
volume_mute="wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle"
volume_raise="wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+ -l 1.2"
volume_lower="wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%- -l 1.2"

mod='Mod4'


# . user keybinds .
#  terminal
riverctl map normal $mod Return spawn "$term"
#  web browser
riverctl map normal $mod F spawn "$web_browser"
#  file manager
riverctl map normal $mod+Shift Return spawn "$file_manager"
#  screenshots
riverctl map normal $mod Z spawn "$screenshot_full"
riverctl map normal $mod+Shift Z spawn "$screenshot_copy_full"
riverctl map normal $mod+Shift S spawn "$screenshot_copy_sel"
#  launcher/menu
riverctl map normal $mod+Shift D spawn "$menu"
riverctl map normal $mod D spawn "$menu_cmd"
riverctl map normal $mod Period spawn "$menu_emoji"
#  locking
riverctl map normal $mod+Shift M spawn "swaylock -f -c 000000"

# . media keybindings .
#  for normal and locked modes
for mode in normal locked
do
    #  volume keys 
    riverctl map $mode None XF86AudioRaiseVolume  spawn 'wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+ -l 1.2'
    riverctl map $mode None XF86AudioLowerVolume  spawn 'wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%- -l 1.2'
    riverctl map $mode None XF86AudioMute         spawn 'wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle'

    #  playerctl 
    riverctl map $mode None XF86AudioMedia spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPlay  spawn 'playerctl play-pause'
    riverctl map $mode None XF86AudioPrev  spawn 'playerctl previous'
    riverctl map $mode None XF86AudioNext  spawn 'playerctl next'

    #  backlight
    riverctl map $mode None XF86MonBrightnessUp   spawn 'brightnessctl set 5%+'
    riverctl map $mode None XF86MonBrightnessDown spawn 'brightnessctl set 5%-'
done


# . window manager keybindings .
#  close focused window
riverctl map normal $mod+Shift Q close
#  exit river
riverctl map normal $mod+Shift E exit
#  shift view focus
riverctl map normal $mod "$key_down" focus-view next
riverctl map normal $mod "$key_up" focus-view previous
#  swap focused view
riverctl map normal $mod+Shift "$key_down" swap next
riverctl map normal $mod+Shift "$key_up" swap previous
#  outputs
#   shift output focus
riverctl map normal $mod Period focus-output next
riverctl map normal $mod Comma focus-output previous
#   send focused view to another output
riverctl map normal $mod+Shift Period send-to-output next
riverctl map normal $mod+Shift Comma send-to-output previous
#  toggle floating window
riverctl map normal $mod+Shift Space toggle-float
#  toggle fullscreen
riverctl map normal $mod+Shift F toggle-fullscreen
#  mouse binds
#   move view
riverctl map-pointer normal $mod BTN_LEFT move-view
#   resize view
riverctl map-pointer normal $mod BTN_RIGHT resize-view


# . layout keybindings .
#  change ratio
riverctl map normal $mod "$key_left" send-layout-cmd rivertile "main-ratio -0.05"
riverctl map normal $mod "$key_right" send-layout-cmd rivertile "main-ratio +0.05"
#  change count
riverctl map normal $mod+Shift "$key_left" send-layout-cmd rivertile "main-count +1"
riverctl map normal $mod+Shift "$key_right" send-layout-cmd rivertile "main-count -1"
#  view bindings 
#   move views
riverctl map normal $mod+Alt "$key_left" move left 100
riverctl map normal $mod+Alt "$key_down" move down 100
riverctl map normal $mod+Alt "$key_up" move up 100
riverctl map normal $mod+Alt "$key_right" move right 100
#   snap views to screen edges
riverctl map normal $mod+Alt+Control "$key_left" snap left
riverctl map normal $mod+Alt+Control "$key_down" snap down
riverctl map normal $mod+Alt+Control "$key_up" snap up
riverctl map normal $mod+Alt+Control "$key_right" snap right
#   resize views
riverctl map normal $mod+Alt+Shift "$key_left" resize horizontal -100
riverctl map normal $mod+Alt+Shift "$key_down" resize vertical 100
riverctl map normal $mod+Alt+Shift "$key_up" resize vertical -100
riverctl map normal $mod+Alt+Shift "$key_right" resize horizontal 100
#  make the focused view top of the layout stack
riverctl map normal $mod S zoom


# . tag bindings .
for i in $(seq 1 9)
do
    tags=$((1 << ($i - 1)))

    # $mod+[1-9] to focus tag [0-8]
    riverctl map normal $mod $i set-focused-tags $tags

    # $mod+Shift+[1-9] to tag focused view with tag [0-8]
    riverctl map normal $mod+Shift $i set-view-tags $tags

    # $mod+Control+[1-9] to toggle focus of tag [0-8]
    riverctl map normal $mod+Control $i toggle-focused-tags $tags

    # $mod+Shift+Control+[1-9] to toggle tag [0-8] of focused view
    riverctl map normal $mod+Shift+Control $i toggle-view-tags $tags
done
all_tags=$(((1 << 32) - 1))
#  $mod+0 to focus all tags
riverctl map normal $mod 0 set-focused-tags $all_tags
#  $mod+Shift+0 to tag focused view with all tags
riverctl map normal $mod+Shift 0 set-view-tags $all_tags


# . layout orientation .
riverctl map normal $mod+Control Up    send-layout-cmd rivertile "main-location top"
riverctl map normal $mod+Control Right send-layout-cmd rivertile "main-location right"
riverctl map normal $mod+Control Down  send-layout-cmd rivertile "main-location bottom"
riverctl map normal $mod+Control Left  send-layout-cmd rivertile "main-location left"


# . passthrough mode .
#  useful for testing a nested compositor.
riverctl declare-mode passthrough
#  enter mode 
riverctl map normal $mod F11 enter-mode passthrough
#  return to normal mode
riverctl map passthrough $mod F11 enter-mode normal


# . input configuration .
#  keyboard
riverctl keyboard-layout -model abnt2 -options compose:lctrl-altgr br
riverctl set-repeat 20 250
#  touchpad
#  https://github.com/riverwm/river/issues/741
touchpad="pointer-1267-12433-ELAN0504:00_04F3:3091_Touchpad"
riverctl input "$touchpad"  natural-scroll enabled
riverctl input "$touchpad" tap enabled
riverctl input "$touchpad" tap-button-map left-right-middle
#  mouse
mouse="pointer-1133-16465-Logitech_M510"
riverctl input "$mouse" accel-profile flat

# Make all views with an app-id that starts with "float" and title "foo" start floating.
riverctl rule-add -app-id 'float*' -title 'foo' float

# Make all views with app-id "bar" and any title use client-side decorations
riverctl rule-add -app-id "bar" csd

# . start rivertile .
# Set the default layout generator to be rivertile and start it.
# River will send the process group of the init executable SIGTERM on exit.
riverctl default-layout rivertile
rivertile -view-padding 4 -outer-padding 6 &
